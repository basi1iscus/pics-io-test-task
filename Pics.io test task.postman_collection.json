{
	"info": {
		"_postman_id": "b528c9dc-6af5-4cc6-b969-bbef58700875",
		"name": "Pics.io test task",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22810423",
		"_collection_link": "https://restless-comet-482049.postman.co/workspace/HR~6a9edb9c-7c24-4baa-be67-fc013b60abb6/collection/22810423-b528c9dc-6af5-4cc6-b969-bbef58700875?action=share&source=collection_link&creator=22810423"
	},
	"item": [
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Must get jwt\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.token).exist;",
							"",
							"    pm.collectionVariables.set(\"bearerToken\", jsonData.token);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"admin@example.com\",\n    \"password\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/v1/auth/login",
					"host": [
						"{{url}}api"
					],
					"path": [
						"v1",
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Events strategy ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Check response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.destination1).to.eql(true);",
							"    pm.expect(jsonData.destination2).to.eql(true);",
							"    pm.expect(jsonData.destination3).to.eql(false);",
							"    pm.expect(jsonData.destination4).to.eql(false);",
							"    pm.expect(jsonData.destination5).to.eql(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    // required payload that should be routed to destinations\n    \"payload\": {\n        \"a\": 1,\n        \"b\": 2,\n        \"c\": 3\n    },\n    \"strategy\": \"ALL\",\n    // array or destination intents\n    \"possibleDestinations\": [\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination3\": true\n        },\n        {\n            \"destination1\": true,\n            \"destination3\": false\n        },\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination4\": false\n        },\n        {\n            \"destination5\": true\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/v1/events",
					"host": [
						"{{url}}api"
					],
					"path": [
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Events strategy ANY",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Check response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.destination1).to.eql(true);",
							"    pm.expect(jsonData.destination2).to.eql(true);",
							"    pm.expect(jsonData.destination3).to.eql(false);",
							"    pm.expect(jsonData.destination4).to.eql(false);",
							"    pm.expect(jsonData.destination5).to.eql(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    // required payload that should be routed to destinations\n    \"payload\": {\n        \"a\": 1,\n        \"b\": 2,\n        \"c\": 3\n    },\n    \"strategy\": \"ALL\",\n    // array or destination intents\n    \"possibleDestinations\": [\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination3\": true\n        },\n        {\n            \"destination1\": true,\n            \"destination3\": false\n        },\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination4\": false\n        },\n        {\n            \"destination5\": true\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/v1/events",
					"host": [
						"{{url}}api"
					],
					"path": [
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Events strategy Custom function",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);",
							"});",
							"pm.test(\"Check response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.destination1).to.eql(true);",
							"    pm.expect(jsonData.destination2).to.eql(true);",
							"    pm.expect(jsonData.destination3).to.eql(true);",
							"    pm.expect(jsonData.destination4).to.eql(true);",
							"    pm.expect(jsonData.destination5).to.eql(true);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    // required payload that should be routed to destinations\n    \"payload\": {\n        \"a\": 1,\n        \"b\": 2,\n        \"c\": 3\n    },\n    \"strategy\": \"() => true;\",\n    // array or destination intents\n    \"possibleDestinations\": [\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination3\": true\n        },\n        {\n            \"destination1\": true,\n            \"destination3\": false\n        },\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination4\": false\n        },\n        {\n            \"destination5\": true\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/v1/events",
					"host": [
						"{{url}}api"
					],
					"path": [
						"v1",
						"events"
					]
				}
			},
			"response": []
		},
		{
			"name": "Events Unauthorized",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([401]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    // required payload that should be routed to destinations\n    \"payload\": {\n        \"a\": 1,\n        \"b\": 2,\n        \"c\": 3\n    },\n    \"strategy\": \"() => true;\",\n    // array or destination intents\n    \"possibleDestinations\": [\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination3\": true\n        },\n        {\n            \"destination1\": true,\n            \"destination3\": false\n        },\n        {\n            \"destination1\": true,\n            \"destination2\": true,\n            \"destination4\": false\n        },\n        {\n            \"destination5\": true\n        }\n    ]\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}api/v1/events",
					"host": [
						"{{url}}api"
					],
					"path": [
						"v1",
						"events"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{bearerToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "http://localhost:3000/",
			"type": "string"
		},
		{
			"key": "bearerToken",
			"value": ""
		}
	]
}